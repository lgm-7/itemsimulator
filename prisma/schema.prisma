// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId Int @id @default(autoincrement()) @map("userId")
  id     String   @unique @map("id")
  password  String   @map("password")

  character Character[]
  @@map("Users")
}

model Character {
  characterId Int @id @default(autoincrement()) @map("characterId")
  userId Int @map("userId")
  characterName String @unique @map("characterName")
  health Int @default(500) @map("health")
  power Int @default(100) @map("power")
  money Int @default(10000) @map("money")

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)
  @@map("Character")
}



model Items {
  itemId Int @id @default(autoincrement()) @map("itemId")
  itemName String @map("itemName")
  itemStat Json @map("itemStat")
  itemPrice Int @map("itemPrice")

  @@map("Items")
}

model CharacterInventory {
  characterInventoryId Int @id @default(autoincrement()) @map("characterInventroyId")
  itemName String @map("itemName")

  @@map("CharacterInventory")
}

model CharacterItem {
  characterItemId Int @id @default(autoincrement()) @map("characterItemId")
  itemName String @map("itemName")

  @@map("CharacterItem")
}